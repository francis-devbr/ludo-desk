







--LISTA TODOS OS ITENS QUE QUE DEREM ENTRADA
CREATE VIEW V_ENTRADA
AS
SELECT  MOV_EST.cdProduto AS CodItem, Sum(ISNULL(MOV_EST.QTDE,0)) AS Quantidade
FROM	TIPO_ME INNER JOIN MOV_EST ON TIPO_ME.cdTPMe = MOV_EST.cdTPMe
WHERE (((TIPO_ME.cdTPMe)=1) AND((MOV_EST.Ativo)=1))
GROUP BY MOV_EST.cdProduto;

--LISTA TODOS OS ITENS QUE QUE DEREM SAÍDA
CREATE VIEW V_SAIDA
AS
SELECT  MOV_EST.cdProduto AS CodItem, Sum(ISNULL(MOV_EST.QTDE,0)) AS Quantidade
FROM	TIPO_ME INNER JOIN MOV_EST ON TIPO_ME.cdTPMe = MOV_EST.cdTPMe
WHERE (((TIPO_ME.cdTPMe)=2) AND((MOV_EST.Ativo)=1))
GROUP BY MOV_EST.cdProduto;

--LISTA TODOS OS ITENS RESERVADOS EM PDV
CREATE VIEW V_RESERVADO
AS
SELECT  MOV_EST.cdProduto AS CodItem, Sum(ISNULL(MOV_EST.QTDE,0)) AS Quantidade
FROM	TIPO_ME INNER JOIN MOV_EST ON TIPO_ME.cdTPMe = MOV_EST.cdTPMe
WHERE (((TIPO_ME.cdTPMe)=3) AND((MOV_EST.Ativo)=1))
GROUP BY MOV_EST.cdProduto;

--LISTA TODOS OS ITENS EM COMPRADOS, VENDIDOS, RESERVADOS E EM ESTOQUE
CREATE VIEW V_ESTOQUE
AS
SELECT PRODUTO.noItem AS NoItem, PRODUTO.Nome, PRODUTO.EAN AS EAN,
		SUM(ISNULL(V_ENTRADA.Quantidade,0)) AS QtdComprada,
		SUM(ISNULL(V_SAIDA.Quantidade,0)) AS QtdVendida,
		SUM(ISNULL(V_RESERVADO.Quantidade,0)) AS QtdReservada,
		SUM(ISNULL(V_ENTRADA.Quantidade,0)-ISNULL(V_SAIDA.Quantidade,0)) AS Estoque_Fisico,
		SUM(ISNULL(V_ENTRADA.Quantidade,0) - ISNULL(V_SAIDA.Quantidade,0) - ISNULL(V_RESERVADO.Quantidade,0)) AS Estoque_Virtual						    
FROM ((PRODUTO LEFT JOIN V_SAIDA ON PRODUTO.cdProduto = V_SAIDA.CodItem) 
			   LEFT JOIN V_ENTRADA ON PRODUTO.cdProduto =V_ENTRADA.CodItem ) 
			   LEFT JOIN V_RESERVADO ON PRODUTO.cdProduto = V_RESERVADO.CodItem
GROUP BY PRODUTO.noItem, PRODUTO.Nome, PRODUTO.EAN


CREATE VIEW V_PRODUTO
AS
SELECT PRODUTO.cdProduto AS CodProduto, PRODUTO.noItem AS NITEM, PRODUTO.EAN AS EAN, PRODUTO.Nome AS NOMEPRODUTO, PRODUTO.vlVenda AS PRECO, PRODUTO.Foto AS IMAGEM, V_ESTOQUE.Estoque_Virtual AS ESTOQUEVIRTUAL, V_ESTOQUE.Estoque_Fisico AS ESTOQUEFISICO, CATEGORIA.nmCategoria AS CATEGORIA
FROM ((PRODUTO INNER JOIN V_ESTOQUE ON PRODUTO.noItem = V_ESTOQUE.NoItem) INNER JOIN  CATEGORIA ON PRODUTO.cdCategoria = CATEGORIA.cdCategoria)
GROUP BY PRODUTO.cdProduto, PRODUTO.noItem, PRODUTO.EAN, PRODUTO.Nome,PRODUTO.vlVenda, PRODUTO.Foto, V_ESTOQUE.Estoque_Virtual, V_ESTOQUE.Estoque_Fisico, CATEGORIA.nmCategoria



CREATE VIEW V_LISTA_PDC
AS
SELECT		
			PRODUTO.noItem,
			PRODUTO.EAN,
			PRODUTO.Nome,
			DET_PEDCOMPRA.QTDE,
			DET_PEDCOMPRA.CustoUnit,
			
			PEDCOMPRA.Ativo,
			DET_PEDCOMPRA.Entregue
			
			
		
	FROM    PEDCOMPRA INNER JOIN DET_PEDCOMPRA ON PEDCOMPRA.cdPedCompra = DET_PEDCOMPRA.cdPedCompra
			INNER JOIN PRODUTO ON DET_PEDCOMPRA.cdProduto = PRODUTO.cdProduto
		
	GROUP BY	
				PEDCOMPRA.Ativo,
				DET_PEDCOMPRA.cdProduto,
				DET_PEDCOMPRA.CustoUnit,
				DET_PEDCOMPRA.QTDE,
				PRODUTO.Nome, 
				PRODUTO.EAN,
				PRODUTO.noItem,
				DET_PEDCOMPRA.Entregue
				
				
CREATE VIEW V_ENDER_PADteste
AS				
SELECT CLIENTE_ENDERECO.cdCli, CLIENTE_ENDERECO.PNomeDest, CLIENTE_ENDERECO.UNomeDest, 
	   CLIENTE_ENDERECO.DDD, CLIENTE_ENDERECO.Telefone, CLIENTE_ENDERECO.noCEP, 
	   CLIENTE_ENDERECO.noLog, CLIENTE_ENDERECO.Complemento, CLIENTE_ENDERECO.cdTpEndereco, CLIENTE_ENDERECO.PCobranca, CLIENTE_ENDERECO.PEntrega, CLIENTE_ENDERECO.Ativo,
	   nmLogradouro, nmBairro,nmCidade, sgUF 
FROM  CLIENTE_ENDERECO, UF INNER JOIN CIDADE ON UF.cdUF = CIDADE.cdUF INNER JOIN BAIRRO 
											ON CIDADE.cdCidade=BAIRRO.cdCidade INNER JOIN LOGRADOURO 
											ON BAIRRO.cdBairro = LOGRADOURO.cdBairro
			
	
	
	
	
	
	
	CREATE VIEW V_ENDER_PAD
AS				
SELECT CLIENTE_ENDERECO.cdCli, CLIENTE_ENDERECO.PNomeDest, CLIENTE_ENDERECO.UNomeDest, 
	   CLIENTE_ENDERECO.DDD, CLIENTE_ENDERECO.Telefone, CLIENTE_ENDERECO.noCEP, 
	   CLIENTE_ENDERECO.noLog, CLIENTE_ENDERECO.Complemento, CLIENTE_ENDERECO.cdTpEndereco, CLIENTE_ENDERECO.PCobranca, CLIENTE_ENDERECO.PEntrega, CLIENTE_ENDERECO.Ativo
	  
FROM  CLIENTE_ENDERECO